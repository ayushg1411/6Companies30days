class Solution {
    public List<Integer> largestDivisibleSubset(int[] nums) {


   int n = nums.length;
   List<Integer> ans= new ArrayList<>();
   if(n==0)
   return ans;

   if(n==1)
   {

       ans.add(nums[0]);
   return ans;
    }


Arrays.sort(nums);
int max=1;
int arr[]= new int[n+1];

for(int i=0;i<n;i++)
arr[i]=1;

for(int i=1;i<n;++i)
{
    for(int j =0;j<i;++j)
    {
        if(nums[i]%nums[j]==0 && 1+arr[j]>arr[i])
        {
            arr[i]=1+arr[j];
            if(max<arr[i])
                max= arr[i];
        }
    }
}

         int prev = -1;
         for(int i =n-1; i>=0; i--)
         {
             if(arr[i]==max && (prev%nums[i]==0 || prev==-1))
{
        ans.add(nums[i]);
        max-=1;
        prev= nums[i];
}

         }
         return ans;
       
        
    }
}